[{"F:\\Ankit project\\React App\\weather\\src\\index.js":"1","F:\\Ankit project\\React App\\weather\\src\\App.js":"2","F:\\Ankit project\\React App\\weather\\src\\components\\Weather.js":"3","F:\\Ankit project\\React App\\weather\\src\\components\\Wrapper.js":"4","F:\\Ankit project\\React App\\weather\\src\\components\\styles\\StyledWeather.js":"5","F:\\Ankit project\\React App\\weather\\src\\components\\styles\\StyledWrapper.js":"6","F:\\Ankit project\\React App\\weather\\src\\utils\\fetchHelpers.js":"7","F:\\Ankit project\\React App\\weather\\src\\components\\Geolocation.js":"8","F:\\Ankit project\\React App\\weather\\src\\components\\WeatherDisplay.js":"9","F:\\Ankit project\\React App\\weather\\src\\components\\SearchBox.js":"10","F:\\Ankit project\\React App\\weather\\src\\components\\styles\\StyledWeatherDisplay.js":"11","F:\\Ankit project\\React App\\weather\\src\\components\\styles\\StyledSearchBox.js":"12","F:\\Ankit project\\React App\\weather\\src\\components\\styles\\StyledGeolocation.js":"13"},{"size":221,"mtime":1611487669890,"results":"14","hashOfConfig":"15"},{"size":183,"mtime":1611492465975,"results":"16","hashOfConfig":"15"},{"size":2214,"mtime":1611496267046,"results":"17","hashOfConfig":"15"},{"size":548,"mtime":1611488171302,"results":"18","hashOfConfig":"15"},{"size":564,"mtime":1611488347180,"results":"19","hashOfConfig":"15"},{"size":337,"mtime":1611492102193,"results":"20","hashOfConfig":"15"},{"size":2000,"mtime":1611496008446,"results":"21","hashOfConfig":"15"},{"size":428,"mtime":1611493057387,"results":"22","hashOfConfig":"15"},{"size":544,"mtime":1611492992868,"results":"23","hashOfConfig":"15"},{"size":404,"mtime":1611493021573,"results":"24","hashOfConfig":"15"},{"size":606,"mtime":1611492069997,"results":"25","hashOfConfig":"15"},{"size":668,"mtime":1611488311046,"results":"26","hashOfConfig":"15"},{"size":276,"mtime":1611493126704,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"l6xqtj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"F:\\Ankit project\\React App\\weather\\src\\index.js",[],["56","57"],"F:\\Ankit project\\React App\\weather\\src\\App.js",[],"F:\\Ankit project\\React App\\weather\\src\\components\\Weather.js",["58"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Wrapper from './Wrapper';\r\n\r\nimport { getWeather } from '../utils/fetchHelpers';\r\n\r\nimport StyledWeather from './styles/StyledWeather';\r\n\r\nconst Weather = () => {\r\n  const [inputLocation, setInputLocation] = useState('Embu');\r\n  const [currentDate, setCurrentDate] = useState('');\r\n  const [location, setLocation] = useState({\r\n    city: '', \r\n    state: '',\r\n    country: ''\r\n  });\r\n  const [weather, setWeather] = useState({\r\n    currentTemp: 0,\r\n    weatherMain: '',\r\n    tempMax: 0,\r\n    tempMin: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchData('Dhanbad').then(([newWeather, placeName]) => {\r\n      setWeather(newWeather);\r\n      setLocation(placeName);\r\n    });\r\n  }, []);\r\n\r\n  async function fetchData(newLocation) {\r\n    const now = new Date();\r\n    setCurrentDate(dateBuilder(now));\r\n    const response = await getWeather(newLocation);\r\n    return response;\r\n  }\r\n\r\n  const setBackground = () => {\r\n    const now = new Date();\r\n    const hour = now.getHours();\r\n    if (hour <= 7 || hour > 18) {\r\n      return 'blue';\r\n    }\r\n    if (hour > 7 && hour <= 15) {\r\n      return 'green';\r\n    }\r\n    return 'orange';\r\n  }\r\n\r\n  const dateBuilder = (d) => {\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n    const day = days[d.getDay()];\r\n    const date = d.getDate();\r\n    const month = months[d.getMonth()];\r\n    const year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`;\r\n  }\r\n\r\n  const handleInputLocation = (e) => {\r\n    e.preventDefault();\r\n    setInputLocation(e.target.value);\r\n  }\r\n\r\n  const getForecast = (e) => {\r\n    e.preventDefault();\r\n    fetchData(inputLocation).then(([newWeather, placeName]) => {\r\n      setWeather(newWeather);\r\n      setLocation(placeName);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <StyledWeather bgImage={setBackground()}>\r\n      <Wrapper states={{ location, currentDate, weather }} handleInput={handleInputLocation} handleSubmit={getForecast} />\r\n    </StyledWeather>\r\n  );\r\n}\r\n\r\nexport default Weather;","F:\\Ankit project\\React App\\weather\\src\\components\\Wrapper.js",[],"F:\\Ankit project\\React App\\weather\\src\\components\\styles\\StyledWeather.js",[],"F:\\Ankit project\\React App\\weather\\src\\components\\styles\\StyledWrapper.js",[],"F:\\Ankit project\\React App\\weather\\src\\utils\\fetchHelpers.js",[],"F:\\Ankit project\\React App\\weather\\src\\components\\Geolocation.js",[],"F:\\Ankit project\\React App\\weather\\src\\components\\WeatherDisplay.js",[],"F:\\Ankit project\\React App\\weather\\src\\components\\SearchBox.js",[],"F:\\Ankit project\\React App\\weather\\src\\components\\styles\\StyledWeatherDisplay.js",[],"F:\\Ankit project\\React App\\weather\\src\\components\\styles\\StyledSearchBox.js",[],"F:\\Ankit project\\React App\\weather\\src\\components\\styles\\StyledGeolocation.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":29,"column":6,"nodeType":"65","endLine":29,"endColumn":8,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [fetchData]",{"range":"72","text":"73"},[734,736],"[fetchData]"]